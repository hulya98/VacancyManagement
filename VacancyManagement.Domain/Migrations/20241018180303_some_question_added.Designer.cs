// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VacancyManagement.Domain;

#nullable disable

namespace VacancyManagement.Domain.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20241018180303_some_question_added")]
    partial class some_question_added
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VacancyManagement.Domain.Dtos.RawSqlDtos.QuizAnswerCompare", b =>
                {
                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsCorrect")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("QuizAnswerCompares");
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VacancyId");

                    b.ToTable("Quizzes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Question = "What is the purpose of using JWT (JSON Web Tokens) in a web application?",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 2,
                            Question = "Which of the following is a key feature of RESTful APIs?",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 3,
                            Question = "In a microservices architecture, what is the primary role of a message broker?",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 4,
                            Question = "Which HTTP method is typically used to update a resource in a RESTful API?",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 5,
                            Question = "What is the primary benefit of using microservices?",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 6,
                            Question = "What does CQRS stand for in the context of system architecture?",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 7,
                            Question = "What is the main purpose of OAuth in web applications?",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 8,
                            Question = "Which design pattern is commonly used to provide an interface for creating objects in a system?",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 9,
                            Question = "In Domain-Driven Design, what is a bounded context?",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 10,
                            Question = "Which protocol is commonly used for real-time communication between clients and servers?",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 11,
                            Question = "What is the difference between vertical and horizontal scaling in cloud computing?",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 12,
                            Question = "What is the purpose of the Repository pattern in software design?",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 13,
                            Question = "Which architectural style is specifically designed for decoupling systems?",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 14,
                            Question = "What does CAP theorem stand for in distributed systems?",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 15,
                            Question = "Which principle in SOLID design focuses on software entities being open for extension but closed for modification?",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 16,
                            Question = "What are the key components of a successful talent management strategy?",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 17,
                            Question = "How do you identify high-potential employees within an  organization?",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 18,
                            Question = "What methods do you use for conducting employee performance         evaluations?",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 19,
                            Question = "Describe the importance of employee engagement in talent    management.",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 20,
                            Question = "How can organizations effectively develop leadership skills among       employees?",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 21,
                            Question = "What role does feedback play in employee development?",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 22,
                            Question = "Explain how succession planning benefits an organization.",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 23,
                            Question = "What strategies can be implemented to retain top talent?",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 24,
                            Question = "How do you approach designing training programs for employees?",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 25,
                            Question = "Discuss the significance of diversity and inclusion in talent       management.",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 26,
                            Question = "What tools or software do you find effective for tracking employee      development?",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 27,
                            Question = "How do you assess the effectiveness of training and development initiatives?",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 28,
                            Question = "What are some common challenges faced in talent management?",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 29,
                            Question = "How can mentoring and coaching contribute to employee development?",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 30,
                            Question = "What is the role of data analytics in improving talent management practices?",
                            VacancyId = 2
                        });
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.QuizAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("QuizAnswers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 1,
                            Title = "To store session data on the client side"
                        },
                        new
                        {
                            Id = 2,
                            IsCorrect = true,
                            Item = "B",
                            QuizId = 1,
                            Title = "To authenticate users and manage user sessions securely"
                        },
                        new
                        {
                            Id = 3,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 1,
                            Title = "To encrypt all user data"
                        },
                        new
                        {
                            Id = 4,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 2,
                            Title = "They always require a message queue"
                        },
                        new
                        {
                            Id = 5,
                            IsCorrect = true,
                            Item = "B",
                            QuizId = 2,
                            Title = "They use HTTP methods like GET, POST, PUT, DELETE"
                        },
                        new
                        {
                            Id = 6,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 2,
                            Title = "They require a relational database for data storage"
                        },
                        new
                        {
                            Id = 7,
                            IsCorrect = true,
                            Item = "A",
                            QuizId = 3,
                            Title = "To enable communication and data exchange between services asynchronously"
                        },
                        new
                        {
                            Id = 8,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 3,
                            Title = "To handle authentication across all services"
                        },
                        new
                        {
                            Id = 9,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 3,
                            Title = "To ensure that each service runs on a different server"
                        },
                        new
                        {
                            Id = 10,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 4,
                            Title = "GET"
                        },
                        new
                        {
                            Id = 11,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 4,
                            Title = "POST"
                        },
                        new
                        {
                            Id = 12,
                            IsCorrect = true,
                            Item = "C",
                            QuizId = 4,
                            Title = "PUT"
                        },
                        new
                        {
                            Id = 13,
                            IsCorrect = true,
                            Item = "A",
                            QuizId = 5,
                            Title = "Easier maintenance and independent scaling"
                        },
                        new
                        {
                            Id = 14,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 5,
                            Title = "Lower development costs"
                        },
                        new
                        {
                            Id = 15,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 5,
                            Title = "Increased monolith stability"
                        },
                        new
                        {
                            Id = 16,
                            IsCorrect = true,
                            Item = "A",
                            QuizId = 6,
                            Title = "Command Query Responsibility Segregation"
                        },
                        new
                        {
                            Id = 17,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 6,
                            Title = "Continuous Query and Response Systems"
                        },
                        new
                        {
                            Id = 18,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 6,
                            Title = "Centralized Queue Redundancy System"
                        },
                        new
                        {
                            Id = 19,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 7,
                            Title = "To provide a framework for authentication"
                        },
                        new
                        {
                            Id = 20,
                            IsCorrect = true,
                            Item = "B",
                            QuizId = 7,
                            Title = "To enable third-party services to access user data without exposing credentials"
                        },
                        new
                        {
                            Id = 21,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 7,
                            Title = "To manage passwords securely"
                        },
                        new
                        {
                            Id = 22,
                            IsCorrect = true,
                            Item = "A",
                            QuizId = 8,
                            Title = "Factory Pattern"
                        },
                        new
                        {
                            Id = 23,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 8,
                            Title = "Observer Pattern"
                        },
                        new
                        {
                            Id = 24,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 8,
                            Title = "Singleton Pattern"
                        },
                        new
                        {
                            Id = 25,
                            IsCorrect = true,
                            Item = "A",
                            QuizId = 9,
                            Title = "A logical boundary that defines the scope of a domain"
                        },
                        new
                        {
                            Id = 26,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 9,
                            Title = "An area of shared data between systems"
                        },
                        new
                        {
                            Id = 27,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 9,
                            Title = "A network of microservices"
                        },
                        new
                        {
                            Id = 28,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 10,
                            Title = "HTTP"
                        },
                        new
                        {
                            Id = 29,
                            IsCorrect = true,
                            Item = "B",
                            QuizId = 10,
                            Title = "WebSockets"
                        },
                        new
                        {
                            Id = 30,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 10,
                            Title = "SOAP"
                        },
                        new
                        {
                            Id = 31,
                            IsCorrect = true,
                            Item = "A",
                            QuizId = 11,
                            Title = "Vertical scaling adds resources to an existing server"
                        },
                        new
                        {
                            Id = 32,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 11,
                            Title = "Horizontal scaling removes unnecessary services"
                        },
                        new
                        {
                            Id = 33,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 11,
                            Title = "Vertical scaling adds new services to the system"
                        },
                        new
                        {
                            Id = 34,
                            IsCorrect = true,
                            Item = "A",
                            QuizId = 12,
                            Title = "To abstract data access logic and manage queries"
                        },
                        new
                        {
                            Id = 35,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 12,
                            Title = "To manage all business logic in one place"
                        },
                        new
                        {
                            Id = 36,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 12,
                            Title = "To ensure thread safety in distributed systems"
                        },
                        new
                        {
                            Id = 37,
                            IsCorrect = true,
                            Item = "A",
                            QuizId = 13,
                            Title = "Service-Oriented Architecture"
                        },
                        new
                        {
                            Id = 38,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 13,
                            Title = "Monolithic Architecture"
                        },
                        new
                        {
                            Id = 39,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 13,
                            Title = "Client-Server Architecture"
                        },
                        new
                        {
                            Id = 40,
                            IsCorrect = true,
                            Item = "A",
                            QuizId = 14,
                            Title = "Consistency, Availability, Partition tolerance"
                        },
                        new
                        {
                            Id = 41,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 14,
                            Title = "Consistency, Adaptability, Performance"
                        },
                        new
                        {
                            Id = 42,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 14,
                            Title = "Concurrency, Availability, Performance"
                        },
                        new
                        {
                            Id = 43,
                            IsCorrect = true,
                            Item = "A",
                            QuizId = 15,
                            Title = "Open for extension but closed for modification"
                        },
                        new
                        {
                            Id = 44,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 15,
                            Title = "Open for modification but closed for extension"
                        },
                        new
                        {
                            Id = 45,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 15,
                            Title = "Open for inheritance but closed for overriding"
                        },
                        new
                        {
                            Id = 46,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 16,
                            Title = "To develop job descriptions"
                        },
                        new
                        {
                            Id = 47,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 16,
                            Title = "To manage employee records"
                        },
                        new
                        {
                            Id = 48,
                            IsCorrect = true,
                            Item = "C",
                            QuizId = 16,
                            Title = "To align talent strategies with business goals"
                        },
                        new
                        {
                            Id = 49,
                            IsCorrect = false,
                            Item = "D",
                            QuizId = 16,
                            Title = "To recruit new employees"
                        },
                        new
                        {
                            Id = 50,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 17,
                            Title = "Through performance reviews"
                        },
                        new
                        {
                            Id = 51,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 17,
                            Title = "By analyzing training participation"
                        },
                        new
                        {
                            Id = 52,
                            IsCorrect = true,
                            Item = "C",
                            QuizId = 17,
                            Title = "Using assessment centers"
                        },
                        new
                        {
                            Id = 53,
                            IsCorrect = false,
                            Item = "D",
                            QuizId = 17,
                            Title = "By conducting exit interviews"
                        },
                        new
                        {
                            Id = 54,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 18,
                            Title = "To set salary levels"
                        },
                        new
                        {
                            Id = 55,
                            IsCorrect = true,
                            Item = "B",
                            QuizId = 18,
                            Title = "To provide developmental feedback"
                        },
                        new
                        {
                            Id = 56,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 18,
                            Title = "To determine promotions"
                        },
                        new
                        {
                            Id = 57,
                            IsCorrect = false,
                            Item = "D",
                            QuizId = 18,
                            Title = "To conduct recruitment"
                        },
                        new
                        {
                            Id = 58,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 19,
                            Title = "It reduces turnover"
                        },
                        new
                        {
                            Id = 59,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 19,
                            Title = "It enhances company reputation"
                        },
                        new
                        {
                            Id = 60,
                            IsCorrect = true,
                            Item = "C",
                            QuizId = 19,
                            Title = "It improves productivity"
                        },
                        new
                        {
                            Id = 61,
                            IsCorrect = false,
                            Item = "D",
                            QuizId = 19,
                            Title = "It ensures compliance"
                        },
                        new
                        {
                            Id = 62,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 20,
                            Title = "By promoting company culture"
                        },
                        new
                        {
                            Id = 63,
                            IsCorrect = true,
                            Item = "B",
                            QuizId = 20,
                            Title = "Through mentoring programs"
                        },
                        new
                        {
                            Id = 64,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 20,
                            Title = "By providing online courses"
                        },
                        new
                        {
                            Id = 65,
                            IsCorrect = false,
                            Item = "D",
                            QuizId = 20,
                            Title = "By hosting workshops"
                        },
                        new
                        {
                            Id = 66,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 21,
                            Title = "It is not important"
                        },
                        new
                        {
                            Id = 67,
                            IsCorrect = true,
                            Item = "B",
                            QuizId = 21,
                            Title = "It helps identify strengths and weaknesses"
                        },
                        new
                        {
                            Id = 68,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 21,
                            Title = "It is a one-time process"
                        },
                        new
                        {
                            Id = 69,
                            IsCorrect = false,
                            Item = "D",
                            QuizId = 21,
                            Title = "It should be avoided"
                        },
                        new
                        {
                            Id = 70,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 22,
                            Title = "It reduces operational costs"
                        },
                        new
                        {
                            Id = 71,
                            IsCorrect = true,
                            Item = "B",
                            QuizId = 22,
                            Title = "It ensures knowledge transfer"
                        },
                        new
                        {
                            Id = 72,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 22,
                            Title = "It improves company culture"
                        },
                        new
                        {
                            Id = 73,
                            IsCorrect = false,
                            Item = "D",
                            QuizId = 22,
                            Title = "It is not beneficial"
                        },
                        new
                        {
                            Id = 74,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 23,
                            Title = "By offering competitive salaries"
                        },
                        new
                        {
                            Id = 75,
                            IsCorrect = true,
                            Item = "B",
                            QuizId = 23,
                            Title = "Through career development opportunities"
                        },
                        new
                        {
                            Id = 76,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 23,
                            Title = "By enhancing benefits packages"
                        },
                        new
                        {
                            Id = 77,
                            IsCorrect = false,
                            Item = "D",
                            QuizId = 23,
                            Title = "By increasing workload"
                        },
                        new
                        {
                            Id = 78,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 24,
                            Title = "By focusing only on technical skills"
                        },
                        new
                        {
                            Id = 79,
                            IsCorrect = true,
                            Item = "B",
                            QuizId = 24,
                            Title = "Through needs assessments"
                        },
                        new
                        {
                            Id = 80,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 24,
                            Title = "By implementing mandatory training"
                        },
                        new
                        {
                            Id = 81,
                            IsCorrect = false,
                            Item = "D",
                            QuizId = 24,
                            Title = "By ignoring employee feedback"
                        },
                        new
                        {
                            Id = 82,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 25,
                            Title = "It fosters creativity"
                        },
                        new
                        {
                            Id = 83,
                            IsCorrect = true,
                            Item = "B",
                            QuizId = 25,
                            Title = "It promotes innovation"
                        },
                        new
                        {
                            Id = 84,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 25,
                            Title = "It is not significant"
                        },
                        new
                        {
                            Id = 85,
                            IsCorrect = false,
                            Item = "D",
                            QuizId = 25,
                            Title = "It creates conflict"
                        },
                        new
                        {
                            Id = 86,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 26,
                            Title = "For tracking employee attendance"
                        },
                        new
                        {
                            Id = 87,
                            IsCorrect = true,
                            Item = "B",
                            QuizId = 26,
                            Title = "For evaluating performance metrics"
                        },
                        new
                        {
                            Id = 88,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 26,
                            Title = "For managing payroll"
                        },
                        new
                        {
                            Id = 89,
                            IsCorrect = false,
                            Item = "D",
                            QuizId = 26,
                            Title = "For conducting interviews"
                        },
                        new
                        {
                            Id = 90,
                            IsCorrect = true,
                            Item = "A",
                            QuizId = 27,
                            Title = "By collecting feedback from participants"
                        },
                        new
                        {
                            Id = 91,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 27,
                            Title = "By ignoring outcomes"
                        },
                        new
                        {
                            Id = 92,
                            IsCorrect = false,
                            Item = "C",
                            QuizId = 27,
                            Title = "By comparing training costs only"
                        },
                        new
                        {
                            Id = 93,
                            IsCorrect = false,
                            Item = "D",
                            QuizId = 27,
                            Title = "By evaluating employee engagement"
                        },
                        new
                        {
                            Id = 94,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 28,
                            Title = "Lack of resources"
                        },
                        new
                        {
                            Id = 95,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 28,
                            Title = "Resistance to change"
                        },
                        new
                        {
                            Id = 96,
                            IsCorrect = true,
                            Item = "C",
                            QuizId = 28,
                            Title = "Ineffective communication"
                        },
                        new
                        {
                            Id = 97,
                            IsCorrect = false,
                            Item = "D",
                            QuizId = 28,
                            Title = "Inadequate training"
                        },
                        new
                        {
                            Id = 98,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 29,
                            Title = "It increases employee satisfaction"
                        },
                        new
                        {
                            Id = 99,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 29,
                            Title = "It reduces training costs"
                        },
                        new
                        {
                            Id = 100,
                            IsCorrect = true,
                            Item = "C",
                            QuizId = 29,
                            Title = "It provides personalized support"
                        },
                        new
                        {
                            Id = 101,
                            IsCorrect = false,
                            Item = "D",
                            QuizId = 29,
                            Title = "It promotes competition among employees"
                        },
                        new
                        {
                            Id = 102,
                            IsCorrect = false,
                            Item = "A",
                            QuizId = 30,
                            Title = "For compliance reasons"
                        },
                        new
                        {
                            Id = 103,
                            IsCorrect = false,
                            Item = "B",
                            QuizId = 30,
                            Title = "To optimize recruitment processes"
                        },
                        new
                        {
                            Id = 104,
                            IsCorrect = true,
                            Item = "C",
                            QuizId = 30,
                            Title = "To enhance talent management practices"
                        },
                        new
                        {
                            Id = 105,
                            IsCorrect = false,
                            Item = "D",
                            QuizId = 30,
                            Title = "It is not useful"
                        });
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CVName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CVName = "26d0b125-12e5-4f3d-ac2e-5e77b5e95863-Hulya_Garibli_CV.pdf",
                            Email = "qeriblih@gmail.com",
                            FirstName = "Admin",
                            LastName = "Admin",
                            Password = "123",
                            PhoneNumber = "+994 51 359 86 44"
                        });
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.UserQuizAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int?>("UserAnswerId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserQuizAnswers");
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.UserVacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VacancyId");

                    b.ToTable("UserVacancies");
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vacancies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "BACK-END DEVELOPER"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "İstedadların idarəolunması və inkişaf üzrə mütəxəssis"
                        });
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.VacancyRequirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Requirement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VacancyId");

                    b.ToTable("VacancyRequirements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Requirement = "Sərbəst araşdırma bacarığı;",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 2,
                            Requirement = "Komanda ilə işləmək bacarığı;",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 3,
                            Requirement = "Yaradıcı düşünmə və problemləri həll etmə bacarığı;",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 4,
                            Requirement = "C# OOP üzrə biliklər;",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 5,
                            Requirement = "NET Core üzrə biliklər;",
                            VacancyId = 1
                        },
                        new
                        {
                            Id = 6,
                            Requirement = "Şirkətdaxili istedad bazasının təşkili üçün aidiyyatı struktur rəhbərləri ilə birgə işlərin görülməsi;",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 7,
                            Requirement = "İstedadların performans göstəricilərinin analiz olunması;",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 8,
                            Requirement = "İstedadların davamlı inkişafına dəstək göstərilməsi;",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 9,
                            Requirement = "İntranet Platformasının yeni funksionallıqlarla mütəmadi inkişaf etdirilməsi və effektivliyinə nəzarət;",
                            VacancyId = 2
                        },
                        new
                        {
                            Id = 10,
                            Requirement = "Key role, critical skills holder və high potential anlayışlara dair müvafiq təsvirin və kriteriyaların formalaşdırmaq;",
                            VacancyId = 2
                        });
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.Quiz", b =>
                {
                    b.HasOne("VacancyManagement.Domain.Entities.Vacancy", "Vacancy")
                        .WithMany("Quizzes")
                        .HasForeignKey("VacancyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.QuizAnswer", b =>
                {
                    b.HasOne("VacancyManagement.Domain.Entities.Quiz", "Quiz")
                        .WithMany("QuizAnswers")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("VacancyManagement.Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacancyManagement.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.UserVacancy", b =>
                {
                    b.HasOne("VacancyManagement.Domain.Entities.User", "User")
                        .WithMany("UserVacancies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacancyManagement.Domain.Entities.Vacancy", "Vacancy")
                        .WithMany("UserVacancies")
                        .HasForeignKey("VacancyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.VacancyRequirement", b =>
                {
                    b.HasOne("VacancyManagement.Domain.Entities.Vacancy", "Vacancy")
                        .WithMany("VacancyRequirements")
                        .HasForeignKey("VacancyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.Quiz", b =>
                {
                    b.Navigation("QuizAnswers");
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.User", b =>
                {
                    b.Navigation("UserRoles");

                    b.Navigation("UserVacancies");
                });

            modelBuilder.Entity("VacancyManagement.Domain.Entities.Vacancy", b =>
                {
                    b.Navigation("Quizzes");

                    b.Navigation("UserVacancies");

                    b.Navigation("VacancyRequirements");
                });
#pragma warning restore 612, 618
        }
    }
}
